//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UIButtonLuaBinderWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("UIButtonLuaBinder");
		L.RegFunction("BindClickEvent", BindClickEvent);
		L.RegFunction("AddClickEvent", AddClickEvent);
		L.RegFunction("OnClick", UIButtonLuaBinder_OnClick);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BindClickEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIButton arg0 = (UIButton)ToLua.CheckUnityObject(L, 1, typeof(UIButton));
			UIButtonLuaBinder.OnClick arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (UIButtonLuaBinder.OnClick)ToLua.CheckObject(L, 2, typeof(UIButtonLuaBinder.OnClick));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(UIButtonLuaBinder.OnClick), func) as UIButtonLuaBinder.OnClick;
			}

			UIButtonLuaBinder.BindClickEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddClickEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UIButton arg0 = (UIButton)ToLua.CheckUnityObject(L, 1, typeof(UIButton));
			UIButtonLuaBinder.OnClick arg1 = null;
			LuaTypes funcType2 = LuaDLL.lua_type(L, 2);

			if (funcType2 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (UIButtonLuaBinder.OnClick)ToLua.CheckObject(L, 2, typeof(UIButtonLuaBinder.OnClick));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 2);
				arg1 = DelegateFactory.CreateDelegate(typeof(UIButtonLuaBinder.OnClick), func) as UIButtonLuaBinder.OnClick;
			}

			UIButtonLuaBinder.AddClickEvent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UIButtonLuaBinder_OnClick(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIButtonLuaBinder.OnClick), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UIButtonLuaBinder.OnClick), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

