//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class EventSystem_UIEvent_CliamReward_TypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(EventSystem.UIEvent_CliamReward.Type));
		L.RegVar("OnLine", get_OnLine, null);
		L.RegVar("Level", get_Level, null);
		L.RegVar("CheckinToday", get_CheckinToday, null);
		L.RegVar("ReCheckinToday", get_ReCheckinToday, null);
		L.RegVar("ClaimContinuesLoginReward", get_ClaimContinuesLoginReward, null);
		L.RegVar("Activity", get_Activity, null);
		L.RegVar("Compensate", get_Compensate, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_OnLine(IntPtr L)
	{
		ToLua.Push(L, EventSystem.UIEvent_CliamReward.Type.OnLine);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Level(IntPtr L)
	{
		ToLua.Push(L, EventSystem.UIEvent_CliamReward.Type.Level);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CheckinToday(IntPtr L)
	{
		ToLua.Push(L, EventSystem.UIEvent_CliamReward.Type.CheckinToday);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReCheckinToday(IntPtr L)
	{
		ToLua.Push(L, EventSystem.UIEvent_CliamReward.Type.ReCheckinToday);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ClaimContinuesLoginReward(IntPtr L)
	{
		ToLua.Push(L, EventSystem.UIEvent_CliamReward.Type.ClaimContinuesLoginReward);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Activity(IntPtr L)
	{
		ToLua.Push(L, EventSystem.UIEvent_CliamReward.Type.Activity);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Compensate(IntPtr L)
	{
		ToLua.Push(L, EventSystem.UIEvent_CliamReward.Type.Compensate);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		EventSystem.UIEvent_CliamReward.Type o = (EventSystem.UIEvent_CliamReward.Type)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

